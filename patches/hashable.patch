diff --git a/Data/Hashable/Class.hs b/Data/Hashable/Class.hs
index 9223d16..0918845 100644
--- a/Data/Hashable/Class.hs
+++ b/Data/Hashable/Class.hs
@@ -105,7 +105,7 @@ import qualified Data.ByteString.Lazy.Internal as BL  -- foldlChunks
 import qualified Data.ByteString.Short.Internal as BSI
 #endif
 
-#ifdef VERSION_integer_gmp
+#if defined(VERSION_integer_gmp) && !defined(ghcjs_HOST_OS)
 
 # if MIN_VERSION_integer_gmp(1,0,0)
 #  define MIN_VERSION_integer_gmp_1_0_0
@@ -287,7 +287,7 @@ instance Hashable Char where
     hash = fromEnum
     hashWithSalt = defaultHashWithSalt
 
-#if defined(MIN_VERSION_integer_gmp_1_0_0)
+#if defined(MIN_VERSION_integer_gmp_1_0_0) && !defined(ghcjs_HOST_OS)
 instance Hashable BigNat where
     hashWithSalt salt (BN# ba) = hashByteArrayWithSalt ba 0 numBytes salt
                                  `hashWithSalt` size
@@ -296,9 +296,11 @@ instance Hashable BigNat where
         numBytes = I# (sizeofByteArray# ba)
 #endif
 
+-- fixme enable again for ghcjs
+#if !defined(ghcjs_HOST_OS)
 #if MIN_VERSION_base(4,8,0)
 instance Hashable Natural where
-# if defined(MIN_VERSION_integer_gmp_1_0_0)
+# if defined(MIN_VERSION_integer_gmp_1_0_0) && !defined(ghcjs_HOST_OS)
     hash (NatS# n)   = hash (W# n)
     hash (NatJ# bn)  = hash bn
 
@@ -310,9 +312,10 @@ instance Hashable Natural where
     hashWithSalt salt (Natural n) = hashWithSalt salt n
 # endif
 #endif
+#endif
 
 instance Hashable Integer where
-#if defined(VERSION_integer_gmp)
+#if defined(VERSION_integer_gmp) && !defined(ghcjs_HOST_OS)
 # if defined(MIN_VERSION_integer_gmp_1_0_0)
     hash (S# n)   = (I# n)
     hash (Jp# bn) = hash bn
